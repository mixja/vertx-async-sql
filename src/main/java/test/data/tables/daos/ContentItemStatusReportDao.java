/*
 * This file is generated by jOOQ.
*/
package test.data.tables.daos;


import java.sql.Timestamp;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test.data.tables.ContentItemStatusReport;
import test.data.tables.records.ContentItemStatusReportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentItemStatusReportDao extends DAOImpl<ContentItemStatusReportRecord, test.data.tables.pojos.ContentItemStatusReport, UUID> {

    /**
     * Create a new ContentItemStatusReportDao without any configuration
     */
    public ContentItemStatusReportDao() {
        super(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT, test.data.tables.pojos.ContentItemStatusReport.class);
    }

    /**
     * Create a new ContentItemStatusReportDao with an attached configuration
     */
    public ContentItemStatusReportDao(Configuration configuration) {
        super(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT, test.data.tables.pojos.ContentItemStatusReport.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UUID getId(test.data.tables.pojos.ContentItemStatusReport object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchById(UUID... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public test.data.tables.pojos.ContentItemStatusReport fetchOneById(UUID value) {
        return fetchOne(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.ID, value);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByTimestamp(Timestamp... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByStatus(String... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.STATUS, values);
    }

    /**
     * Fetch records that have <code>reason IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByReason(String... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.REASON, values);
    }

    /**
     * Fetch records that have <code>total_items_count IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByTotalItemsCount(Integer... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.TOTAL_ITEMS_COUNT, values);
    }

    /**
     * Fetch records that have <code>successful_items_count IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchBySuccessfulItemsCount(Integer... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.SUCCESSFUL_ITEMS_COUNT, values);
    }

    /**
     * Fetch records that have <code>failed_items_count IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByFailedItemsCount(Integer... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.FAILED_ITEMS_COUNT, values);
    }

    /**
     * Fetch records that have <code>successful_items IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchBySuccessfulItems(UUID[]... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.SUCCESSFUL_ITEMS, values);
    }

    /**
     * Fetch records that have <code>failed_items IN (values)</code>
     */
    public List<test.data.tables.pojos.ContentItemStatusReport> fetchByFailedItems(Object[]... values) {
        return fetch(ContentItemStatusReport.CONTENT_ITEM_STATUS_REPORT.FAILED_ITEMS, values);
    }
}
