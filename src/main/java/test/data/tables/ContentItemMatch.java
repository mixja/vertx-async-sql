/*
 * This file is generated by jOOQ.
*/
package test.data.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import test.data.Cola;
import test.data.Keys;
import test.data.tables.records.ContentItemMatchRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentItemMatch extends TableImpl<ContentItemMatchRecord> {

    private static final long serialVersionUID = -1658343105;

    /**
     * The reference instance of <code>cola.content_item_match</code>
     */
    public static final ContentItemMatch CONTENT_ITEM_MATCH = new ContentItemMatch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContentItemMatchRecord> getRecordType() {
        return ContentItemMatchRecord.class;
    }

    /**
     * The column <code>cola.content_item_match.id</code>.
     */
    public final TableField<ContentItemMatchRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('content_item_match_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>cola.content_item_match.content_item_set_id</code>.
     */
    public final TableField<ContentItemMatchRecord, UUID> CONTENT_ITEM_SET_ID = createField("content_item_set_id", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>cola.content_item_match.content_item_id</code>.
     */
    public final TableField<ContentItemMatchRecord, UUID> CONTENT_ITEM_ID = createField("content_item_id", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>cola.content_item_match.source</code>.
     */
    public final TableField<ContentItemMatchRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>cola.content_item_match.score</code>.
     */
    public final TableField<ContentItemMatchRecord, BigDecimal> SCORE = createField("score", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>cola.content_item_match.match</code>.
     */
    public final TableField<ContentItemMatchRecord, Object> MATCH = createField("match", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * Create a <code>cola.content_item_match</code> table reference
     */
    public ContentItemMatch() {
        this("content_item_match", null);
    }

    /**
     * Create an aliased <code>cola.content_item_match</code> table reference
     */
    public ContentItemMatch(String alias) {
        this(alias, CONTENT_ITEM_MATCH);
    }

    private ContentItemMatch(String alias, Table<ContentItemMatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContentItemMatch(String alias, Table<ContentItemMatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cola.COLA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContentItemMatchRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTENT_ITEM_MATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContentItemMatchRecord> getPrimaryKey() {
        return Keys.CONTENT_ITEM_MATCH_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContentItemMatchRecord>> getKeys() {
        return Arrays.<UniqueKey<ContentItemMatchRecord>>asList(Keys.CONTENT_ITEM_MATCH_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContentItemMatchRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContentItemMatchRecord, ?>>asList(Keys.CONTENT_ITEM_MATCH__CONTENT_ITEM_MATCH_CONTENT_ITEM_SET_ID_FKEY, Keys.CONTENT_ITEM_MATCH__CONTENT_ITEM_MATCH_CONTENT_ITEM_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContentItemMatch as(String alias) {
        return new ContentItemMatch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContentItemMatch rename(String name) {
        return new ContentItemMatch(name, null);
    }
}
